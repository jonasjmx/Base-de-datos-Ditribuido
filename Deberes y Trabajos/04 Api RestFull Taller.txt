Notas de la clase 04

Introducción al Manejo de Controles en Entornos Gráficos
Introducción a Microsoft .NET
Microsoft .NET es una plataforma de desarrollo de código abierto diseñada para crear aplicaciones web, móviles, de escritorio y más.
------------------------------------------------------------------------------------------------------------------------
Componentes del .NET Framework
Bibliotecas: Conjunto de herramientas reutilizables para el desarrollo de aplicaciones.
Lenguajes: Compatibilidad con C#, F#, VB.NET, entre otros.
Runtimes: Entornos de ejecución para aplicaciones .NET.
Historia de .NET
.NET Framework: Lanzado en 2002.
.NET Core: Introducido en 2016 como una versión multiplataforma y modular.
.NET: Unificación de .NET Framework y .NET Core en 2020.
ASP.NET y ASP.NET Core
ASP.NET: Framework para desarrollar aplicaciones web dinámicas.
ASP.NET Core: Versión moderna y multiplataforma de ASP.NET.
Instalación de Herramientas
Instalación de .NET:
------------------------------------------------------------------------------------------------------------------------
Descargue e instale el SDK desde el sitio oficial de .NET.
Instalación de Visual Studio Community:
------------------------------------------------------------------------------------------------------------------------
IDE gratuito para desarrollar aplicaciones en .NET.
Instalación de SQL Server y SSMS:
------------------------------------------------------------------------------------------------------------------------
SQL Server: Motor de base de datos relacional.
SSMS (SQL Server Management Studio): Herramienta para administrar bases de datos SQL Server.
Descargue SSMS desde:
Descargar SSMS.
Conexión y Creación de Bases de Datos
Conexión: Configure la conexión entre SSMS y SQL Server.
Creación de Bases de Datos:
Ejemplo: Crear bases de datos para "Productos" y "Persona".
¿Qué es el SSMS?
SQL Server Management Studio (SSMS):
Es un entorno integrado para administrar cualquier infraestructura de SQL, desde SQL Server hasta Azure SQL Database.
------------------------------------------------------------------------------------------------------------------------
API (Application Programming Interface)
Definición:
Una API es una interfaz de programación que permite la comunicación entre aplicaciones.
------------------------------------------------------------------------------------------------------------------------
Objetivos:

Crear servicios como aplicaciones web, comercio electrónico, juegos, entre otros.
Consumir servicios empresariales o de usuario final.
REST (Representational State Transfer)
Características de REST:

Uso de una interfaz uniforme.
Modelo cliente-servidor.
Operaciones sin estado.
Almacenamiento en caché.
Sistemas de capas (múltiples capas de servidores).
Código bajo demanda (por ejemplo, JSON).
Objetivo:
Construir una API RESTful que gestione la comunicación entre la aplicación cliente y la base de datos utilizando el protocolo HTTP.
------------------------------------------------------------------------------------------------------------------------
Métodos CRUD en una API RESTful
C (Create): Crear recursos.
R (Read): Mostrar recursos.
U (Update): Editar recursos.
D (Delete): Eliminar recursos.
Probar una API con Postman
Postman: Herramienta para probar APIs sin necesidad de una aplicación cliente.
------------------------------------------------------------------------------------------------------------------------
Método GET:
URI: Identificador uniforme de recursos.
Petición: Solicita datos a la API.
Respuesta: Devuelve datos en formato JSON.
Ejemplo:

Realizar una solicitud GET para mostrar datos desde la API.
------------------------------------------------------------------------------------------------------------------------