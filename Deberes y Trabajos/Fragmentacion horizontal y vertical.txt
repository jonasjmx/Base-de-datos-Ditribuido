🧩 ¿Qué es la fragmentación horizontal? 

Es una técnica de distribución de datos en la que una tabla se divide en subconjuntos de filas (tuplas), normalmente basándose en un criterio lógico, como el valor de una columna. Esto permite almacenar estos fragmentos en diferentes nodos o servidores, mejorando la eficiencia y localización de los datos. 

datos para una universidad, con una tabla Estudiantes 

 

CREATE TABLE Estudiantes ( 

    id INT PRIMARY KEY, 

    nombre VARCHAR(50), 

    carrera VARCHAR(50), 

    ciudad VARCHAR(50) 

); 

Ingresar datos 

🧩 Fragmentación horizontal 

Criterio de fragmentación: ciudad del estudiante. 

🔹 Fragmento 1 (Estudiantes_Quito): 

-- Fragmento Quito 

CREATE TABLE Estudiantes_Quito ( 

    id INT PRIMARY KEY, 

    nombre VARCHAR(50), 

    carrera VARCHAR(50), 

    ciudad VARCHAR(50) 

); 

  

-- Insertamos las filas correspondientes 

INSERT INTO Estudiantes_Quito VALUES 

(1, 'Ana Pérez', 'Ingeniería', 'Quito'), 

(3, 'Carla Ruiz', 'Ingeniería', 'Quito'); 

🔹 Fragmento 2 (Estudiantes_Ambato): 

 

-- Fragmento Ambato 

CREATE TABLE Estudiantes_Ambato ( 

    id INT PRIMARY KEY, 

    nombre VARCHAR(50), 

    carrera VARCHAR(50), 

    ciudad VARCHAR(50) 

); 

  

INSERT INTO Estudiantes_Ambato VALUES 

(2, 'Luis Mora', 'Medicina', 'Ambato'), 

(5, 'Rosa Vega', 'Medicina', 'Ambato'); 
🔹 Fragmento 3 (Estudiantes_Cuenca): 

 

-- Fragmento Cuenca 

CREATE TABLE Estudiantes_Cuenca ( 

    id INT PRIMARY KEY, 

    nombre VARCHAR(50), 

    carrera VARCHAR(50), 

    ciudad VARCHAR(50) 

); 

  

INSERT INTO Estudiantes_Cuenca VALUES 

(4, 'Mario León', 'Derecho', 'Cuenca'), 

(6, 'J. Ortega', 'Derecho', 'Cuenca'); 

🧩 Reconstrucción de la tabla original (vista global) 

 

Si quisiéramos consultar toda la tabla original, podríamos usar una vista como esta: 

 

CREATE VIEW Estudiantes_Todos AS 

SELECT * FROM Estudiantes_Quito 

UNION ALL 

SELECT * FROM Estudiantes_Ambato 

UNION ALL 

SELECT * FROM Estudiantes_Cuenca; 


Ventajas de esta fragmentación 

Mejora el rendimiento local de las consultas. 

Permite mantener la información más cerca del usuario o de los sistemas que la necesitan. 

Facilita la escalabilidad horizontal. 

-------------------------------------------------------------------------------------------------------------------


Usaremos una tabla sencilla de empleados: 

 

 

CREATE DATABASE FragmentacionEjemplo; 

GO 

USE FragmentacionEjemplo; 

GO 

  

CREATE TABLE Empleados ( 

    ID INT PRIMARY KEY, 

    Nombre NVARCHAR(100), 

    Apellido NVARCHAR(100), 

    Departamento NVARCHAR(50), 

    Salario DECIMAL(10, 2), 

    Direccion NVARCHAR(200), 

    Telefono NVARCHAR(20) 

); 

  

INSERT INTO Empleados VALUES 

(1, 'Ana', 'Perez', 'TI', 1200.00, 'Calle 1', '099111111'), 

(2, 'Luis', 'Soto', 'Marketing', 1100.00, 'Calle 2', '099222222'), 

(3, 'Marta', 'Lopez', 'TI', 1250.00, 'Calle 3', '099333333'), 

(4, 'Carlos', 'Gomez', 'RRHH', 1000.00, 'Calle 4', '099444444'); 

Fragmentación Vertical 

Separamos los datos en dos tablas: una con datos personales y otra con datos laborales. 

 

-- Fragmento 1: Información personal 

CREATE TABLE Empleados_Personal ( 

    ID INT PRIMARY KEY, 

    Nombre NVARCHAR(100), 

    Apellido NVARCHAR(100), 

    Direccion NVARCHAR(200), 

    Telefono NVARCHAR(20) 

); 

  

-- Fragmento 2: Información laboral 

CREATE TABLE Empleados_Laboral ( 

    ID INT PRIMARY KEY, 

    Departamento NVARCHAR(50), 

    Salario DECIMAL(10, 2) 

); 

  

-- Insertamos los datos (puede ser con SELECT INTO o INSERT SELECT) 

INSERT INTO Empleados_Personal 

SELECT ID, Nombre, Apellido, Direccion, Telefono FROM Empleados; 

  

INSERT INTO Empleados_Laboral 

SELECT ID, Departamento, Salario FROM Empleados; 

📌 Puedes hacer un JOIN si necesitas reconstruir la tabla original: 

SELECT * 

FROM Empleados_Personal EP 

JOIN Empleados_Laboral EL ON EP.ID = EL.ID; 

 Paso a paso: Fragmentación Mixta (Vertical + Horizontal) 

 

Primero aplicamos fragmentación vertical (como arriba). 

Luego aplicamos fragmentación horizontal en una de las tablas (por ejemplo, según el departamento en Empleados_Laboral): 

-- Fragmento para TI 

CREATE TABLE Empleados_Laboral_TI ( 

    ID INT PRIMARY KEY, 

    Departamento NVARCHAR(50), 

    Salario DECIMAL(10, 2) 

); 

 

-- Fragmento para otros departamentos 

CREATE TABLE Empleados_Laboral_Otros ( 

    ID INT PRIMARY KEY, 

    Departamento NVARCHAR(50), 

    Salario DECIMAL(10, 2) 

); 

  

-- Insertamos según condición 

INSERT INTO Empleados_Laboral_TI 

SELECT * FROM Empleados_Laboral WHERE Departamento = 'TI'; 

  

INSERT INTO Empleados_Laboral_Otros 

SELECT * FROM Empleados_Laboral WHERE Departamento <> 'TI'; 

